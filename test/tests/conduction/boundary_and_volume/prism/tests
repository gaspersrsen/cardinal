[Tests]
  [pyramid]
    type = Exodiff
    input = openmc.i
    exodiff = 'openmc_out.e'
    min_parallel = 8
    custom_cmp = 'exodiff.cmp'
    heavy = true
    requirement = "A coupled MOOSE-nekRS heat conduction problem shall produce the correct temperature "
                  "distribution when (1) a heat source is applied in the nekRS volume and (2) a heat "
                  "flux is imposed in nekRS through a boundary. The same problem is created in a standalone "
                  "MOOSE simulation, in moose.i. Temperatures agree to within 0.2% degrees, and the agreement "
                  "can be made better by using finer meshes in the coupled Cardinal case."
    capabilities = 'nekrs'
  []
  [pyramid_exact]
    type = CSVDiff
    input = openmc_exact.i
    csvdiff = openmc_exact_out.csv
    min_parallel = 8
    heavy = true
    requirement = "The system shall couple NekRS to MOOSE through simultaneous boundary heat flux and "
                  "volumetric heating when using an exact mesh mirror. The solution is nearly identical "
                  "to the pyramid test and the usrwrk output for flux and volumetric heating match the "
                  "auxiliary variables in the Nek-wrapped input."
    capabilities = 'nekrs'
  []
  [duplicate_temp]
    type = RunException
    input = nek.i
    cli_args = "AuxVariables/heat_source/order=FIRST"
    expect_err = "Cardinal is trying to add an auxiliary variable named 'heat_source', but you already have a variable by this name."
    requirement = "The system shall error if the user specifies a duplicate variable with a name overlapping with special names reserved for Cardinal data transfers."
    capabilities = 'nekrs'
  []
[]
