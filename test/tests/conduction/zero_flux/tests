[Tests]
  [zero_flux_total]
    type = RunApp
    input = main.i
    requirement = "The NekRS wrapping shall allow a zero total flux to be sent from MOOSE to NekRS "
                  "when all sidesets are conserved together."
    capabilities = 'nekrs'
  []
  [zero_flux_total_vpp]
    type = RunApp
    input = main_vpp.i
    requirement = "The NekRS wrapping shall allow a zero total flux to be sent from MOOSE to NekRS "
                  "when sidesets are individually conserved."
    capabilities = 'nekrs'
  []
  [vpp_disjoint]
    type = CSVDiff
    input = main_disjoint.i
    csvdiff = main_disjoint_out_nek0.csv
    requirement = "The NekRS wrapping shall allow unique sideset fluxes provided that the sidesets do not "
                  "share any nodes in the NekRS mesh."
    capabilities = 'nekrs'
  []
  [vpp_disjoint_zero]
    type = CSVDiff
    input = main_zero.i
    csvdiff = main_zero_out_nek0.csv
    requirement = "The NekRS wrapping shall allow unique sideset fluxes provided that the sidesets do not "
                  "share any nodes in the NekRS mesh, with some sidesets being zero flux."
    capabilities = 'nekrs'
  []
  [mismatch_length]
    type = RunException
    input = mismatch_main.i
    expect_err = "The sideset flux reporter transferred to NekRS must have a length equal to"
    requirement = "The system shall print a helpful error message if the sideset flux reporter does "
                  "not have the correct length."
    capabilities = 'nekrs'
  []
  [nodes_on_shared]
    type = RunException
    input = main_shared.i
    expect_err = "Flux normalization process failed!"
    requirement = "The system shall error if conserving flux on each unique sideset, but with nodes "
                  "shared across multiple sidesets."
    capabilities = 'nekrs'
  []
[]
