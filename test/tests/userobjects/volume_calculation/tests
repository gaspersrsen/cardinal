[Tests]
  [invalid_box]
    type = RunException
    input = openmc.i
    cli_args = 'UserObjects/vol/lower_left="10.0 0.0 0.0"'
    expect_err = "The 'upper_right' \(2.5, 2.5, 10\) must be greater than the 'lower_left' \(10, 0, 0\)!"
    requirement = "The system shall error if an invalid bounding box is specified for volume calculations"
    capabilities = 'openmc'
  []
  [single_level]
    type = CSVDiff
    input = openmc.i
    csvdiff = openmc_out.csv
    requirement = "The system shall map stochastic volumes for each OpenMC cell which maps to MOOSE."
    capabilities = 'openmc'
  []
  [single_level_scaling]
    type = CSVDiff
    input = scaling.i
    csvdiff = scaling_out.csv
    requirement = "The system shall map stochastic volumes for each OpenMC cell which maps to MOOSE when the Mesh "
                  "is not in units of centimeters"
    capabilities = 'openmc'
  []
  [missing_vol]
    type = RunException
    input = no_vol.i
    expect_err = "To display the actual OpenMC cell volumes"
    requirement = "The system shall error if trying to view stochastic volumes without the stochastic "
                  "volume calculation having been created."
    capabilities = 'openmc'
  []
  [rel_err_trigger]
    type = CSVDiff
    input = scaling.i
    csvdiff = rel_err_out.csv
    cli_args = 'UserObjects/vol/trigger=rel_err UserObjects/vol/trigger_threshold=1e-2 Outputs/file_base=rel_err_out'
    requirement = "The system shall terminate the stochastic volume calculation using a relative error metric."
    capabilities = 'openmc'
  []
  [user_bb]
    type = CSVDiff
    input = user_bb.i
    csvdiff = user_bb_out.csv
    requirement = "The system shall correctly compute volumes in OpenMC when using a user-provided bounding box."
    capabilities = 'openmc'
  []
[]
